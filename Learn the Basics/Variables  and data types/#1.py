"""Тема: Variables and Data Types"""
# В Python существует множество типов данных, каждый из которых имеет свои ограничения
# и возможности. Основные типы данных в Python:
#
# Числовые типы:
# Целочисленные типы данных (int) могут представлять целые числа от -2^31 до 2^31-1.
# Типы данных с плавающей точкой (float) могут представлять действительные числа с
# произвольной точностью.
# Комплексные типы данных (complex) могут представлять комплексные числа в виде a +
# bi, где a и b - действительные числа.
# Строковые типы:
# Тип данных str представляет строки символов.
# Тип данных bytes представляет последовательность байт.
# Тип данных bytearray представляет изменяемый массив байтов.
# Логический тип:
# Тип данных bool может представлять логические значения True или False.
# Списки и кортежи:
# Тип данных list представляет упорядоченную изменяемую последовательность элементов.
# Тип данных tuple представляет упорядоченную неизменяемую последовательность элементов.
# Словари:
# Тип данных dict представляет неупорядоченную коллекцию пар ключ-значение.
# Множества:
# Тип данных set представляет неупорядоченную коллекцию уникальных элементов.
# None:
# Значение None представляет отсутствие значения или нулевую ссылку.
# Конвертация типов данных
#
# В Python можно конвертировать значения одного типа данных в другой.
# Для этого используются функции преобразования типов данных:
#
# int(): Конвертирует значение в целочисленный тип.
# float(): Конвертирует значение в тип с плавающей точкой.
# complex(): Конвертирует значение в комплексный тип.
# str(): Конвертирует значение в строковый тип.
# bytes(): Конвертирует значение в тип bytes.
# bytearray(): Конвертирует значение в тип bytearray.
# bool(): Конвертирует значение в логический тип.
# list(): Конвертирует значение в список.
# tuple(): Конвертирует значение в кортеж.
# dict(): Конвертирует значение в словарь.
# set(): Конвертирует значение в множество.
# Операторы присваивания
#
# В Python существует несколько операторов присваивания, которые можно использовать для присвоения значения переменной:
#
# =: Простое присваивание.
# ==: Присваивание с приведением типов.
# *=:** Присваивание с умножением.
# /=:** Присваивание с делением.
# +=:** Присваивание с суммированием.
# -=:** Присваивание с вычитанием.
# **=:** Присваивание с возведением в степень.
# Локальные и глобальные переменные
#
# В Python переменные могут быть локальными или глобальными.
# Локальные переменные доступны только в блоке, в котором они были определены.
# Глобальные переменные доступны во всем коде.
#
# Переменные-массивы
#
# Переменные-массивы в Python представляют собой упорядоченную коллекцию элементов одного типа.
# Массивы могут быть изменяемыми или неизменяемыми.
#
# Переменные-словари
#
# Переменные-словари в Python представляют собой неупорядоченную коллекцию пар ключ-значение.
# Ключи словарей должны быть уникальными.
# Конвертация типов данных

x = "123"
y = int(x)
print(y)

# Операторы присваивания

x = 10
x = x + 1
print(x)

# Локальные и глобальные переменные

def my_function():
    global x
    x = 20

my_function()
print(x)

# Переменные-массивы

numbers = [1, 2, 3, 4, 5]
print(numbers[0])

# Переменные-словари

person = {"name": "John", "age": 30}
print(person["name"])